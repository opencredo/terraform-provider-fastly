locals {
    service_name         = "{{.service_name}}"
    dictionary_name      = "{{.dictionary_name}}"
    acl_name             = "{{.acl_name}}"
    dynamic_snippet_name = "{{.dynamic_snippet_name}}"
    domain               = "{{.domain_name}}"
}

resource "fastly_service_v1" "service" {
    name = local.service_name
    domain {
        name = local.domain
    }
    backend {
        address = "127.0.0.1"
        name    = "localhost"
        port    = 80
    }
    dictionary {
        name = local.dictionary_name
    }
    acl {
        name = local.acl_name
    }
    dynamicsnippet {
        name     = local.dynamic_snippet_name
        type     = "recv"
        priority = 110
    }
    force_destroy = true
}


resource "fastly_service_dictionary_items_v1" "items" {
    service_id    = fastly_service_v1.service.id
    dictionary_id = { for s in fastly_service_v1.service.dictionary : s.name => s.dictionary_id }[local.dictionary_name]
    items = {
        "US" : "en-US",
        "FR" : "fr-FR",
        "NL" : "nl-NL",
    }
}


resource "fastly_service_acl_entries_v1" "entries" {
    service_id = "${fastly_service_v1.service.id}"
    acl_id     = { for d in fastly_service_v1.service.acl : d.name => d.acl_id }[local.acl_name]
    entry {
        ip      = "127.0.0.1"
        subnet  = "24"
        negated = false
    }
}


resource "fastly_service_dynamic_snippet_content_v1" "dyn_content" {
    service_id = fastly_service_v1.service.id
    snippet_id = { for s in fastly_service_v1.service.dynamicsnippet : s.name => s.snippet_id }[local.dynamic_snippet_name]

content = <<EOT
        if (!req.http.Accept-Language) {
        set req.http.Accept-Language = table.lookup(${local.dictionary_name}, geoip.country_code, "en-US");
}

# block all requests to Admin pages from IP addresses not in office_ip_ranges
if (req.url ~ "^/admin" && ! (client.ip ~ ${local.acl_name})) {
error 403 "Forbidden";
}
EOT
}
